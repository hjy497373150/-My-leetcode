class Solution {
public:
    int characterReplacement(string s, int k) {
        //滑动窗口+双指针
        int len = s.size();
        vector<int> counts(26,0);//存放窗口内字符出现的次数
        int left = 0,right = 0;
        int maxcount = 0;
        int res = 0;
        while(right < len){
            //右指针读入一个字符，更新此时的maxcount(窗口中出现字符的最大次数)
            counts[s[right]-'A']++;
            maxcount = max(maxcount,counts[s[right]-'A']);
            right++;
            //此时维护窗口内字符全部一样所使用的k不够，则左指针移动
            if(right-left > maxcount+k){
                counts[s[left]-'A']--;
                left++;
            }
            res = max(res,right-left);
        }
        return res;
    }
};