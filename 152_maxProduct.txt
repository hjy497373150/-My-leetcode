//动态规划
//由于负数的存在，所以当负数存在时，最大值与最小值互换

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        else if(nums.size()==1)
            return nums[0];
        int res = 0;
        int imax = 1,imin = 1;
        for(int i = 0;i < nums.size();i++){
            if(nums[i] < 0){
                int temp = imax;
                imax = imin;
                imin = temp;
            }
            imax = max(nums[i],imax*nums[i]);
            imin = min(nums[i],imin*nums[i]);
            res = max(imax,res);
        }
        return res;
    }
};