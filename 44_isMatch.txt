class Solution {
public:
    bool isMatch(string s, string p) {
        //经典动态规划
        int m = s.size();
        int n = p.size();
        //dp[i][j]辨识s的前i个字符与p的前j个字符能否匹配
        vector<vector<bool> > dp(m+1,vector<bool>(n+1,false));
        dp[0][0] = true;
        //*可以匹配空字符串
        for(int i = 1;i<=n;i++){
            if(p[i-1]=='*')
                dp[0][i] = true;
            else
                break;
        }
        for(int i = 1;i<=m;i++){
            for(int j = 1;j<=n;j++){
                if(p[j-1]=='*')
                    dp[i][j] = dp[i][j-1] || dp[i-1][j];
                if(p[j-1]=='?' || p[j-1]==s[i-1])
                    dp[i][j] = dp[i-1][j-1];
            }
        }
        return dp[m][n];
    }
};