class Solution {
public:
    int maxUncrossedLines(vector<int>& nums1, vector<int>& nums2) {
        //其实相当于求两个数组的最长公共子序列
        //动态规划
        int m = nums1.size(), n = nums2.size();
        vector<vector<int> > dp(m+1,vector<int>(n+1));//dp[i][j]代表nums1[0~i]和nums2[0~j]的最长公共子序列长度
        for(int i = 1;i<=m;i++){
            for(int j = 1;j<=n;j++){
                if(nums1[i-1] == nums2[j-1])
                    dp[i][j] = dp[i-1][j-1] + 1;
                else
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[m][n];
    }
};