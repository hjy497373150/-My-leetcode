class Solution {
public:
    int integerBreak(int n) {
        //盲猜动态规划,dp[i]表示数字i被拆分成两个数字的最大乘积
        //i=0,1时,dp[i]=0,i>2时dp[i]由j*(i-j)、j*dp[i-j]决定
        if(n==1)
            return 1;
        vector<int> dp(n+1);
        dp[0] = dp[1] = 0;
        for(int i = 2;i<=n;i++){
            int curmax = 0;
                for(int j = 1;j<i;j++)
                    curmax = max(curmax,max(j*(i-j),j*dp[i-j]));
            dp[i] = curmax;
        }
        return dp[n];
    }
};