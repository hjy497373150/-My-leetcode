class Solution {
public:
    int strangePrinter(string s) {
        //动态规划
        int n = s.size();
        //vector<vector<int>> dp(n,vector<int>(n,INT_MAX));//dp[i][j]代表答应区间[i,j]需要的最少次数
        int dp[n][n];
        memset(dp,0x3f3f3f3f,sizeof(dp));
        for(int i = n-1;i>=0;i--){
            dp[i][i] = 1;
            for(int j = i+1;j<n;j++){
                if(s[i]==s[j])
                    dp[i][j] = dp[i][j-1];
                else{
                    for(int k = i;k<j;k++)
                        dp[i][j] = min(dp[i][j],dp[i][k]+dp[k+1][j]);
                }
            }
        } 
        return dp[0][n-1];
    }
};