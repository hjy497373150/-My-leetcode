/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node* treeToDoublyList(Node* root) {
        //先中序遍历，最后链接头尾即可
        if(root==nullptr)
            return nullptr;
        stack<Node*> stk;
        Node* pre = nullptr;
        Node* head = nullptr;
        while(!stk.empty()||root){
            if(root){
                stk.push(root);
                root = root->left;
            }
            else{
                root = stk.top();
                stk.pop();
                if(pre==nullptr){
                    pre = root;
                    head = root;
                }
                else{
                    pre->right = root;
                    root->left = pre;
                    pre = root;
                }
                root = root->right;
            }
        }
        head->left = pre;
        pre->right = head;
        return head;
    }
};