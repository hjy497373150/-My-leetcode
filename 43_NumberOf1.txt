class Solution {
public:
    int countDigitOne(int n) {
        vector<long> help(11);//存放1-9 10-100 101-1000等1的个数
        help[1] = 1;
        for(int i = 2;i<11;i++){
            help[i] = pow(10,i-1) + help[i-1]*10;
        }
        //用栈记录各个位上的值
        stack<int> stk;
        while(n){
            stk.push(n%10);
            n /= 10;
        }
        long res=0;
        while(!stk.empty()){
            int size = stk.size();
            int top = stk.top();
            if(size==1){
                if(top!=0)
                    res += 1;
            }
            else{
                if(top>1){
                    res += pow(10,size-1);
                }
                else if(top==1)
                    res += special(stk);
                res += top * help[size-1];
            }
            stk.pop();
        }  
        return res;
    }
    int special(stack<int> stk){
        stk.pop();
        int res = 0;
        while(!stk.empty()){
            res = res*10+stk.top();
            stk.pop();
        }
        return res+1;
    }
};