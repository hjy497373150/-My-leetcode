class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        //哈希表法
        vector<int> res(2,0);
        int n = nums.size();
        vector<int> count(n+1,0);
        for(int i = 0;i<n;i++){
            count[nums[i]]++;
        }
        for(int i = 1;i<=n;i++){
            if(count[i]==2)
                res[0] = i;
            else if(count[i]==0)
                res[1] = i;
        }
        return res;
    }
};

class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        //桶排序法
        vector<int> res(2,0);
        int n = nums.size();
        for(int i = 0;i<n;i++){
            while(nums[i]!=i+1 && nums[nums[i]-1] !=nums[i]){
                swap(nums,i,nums[i]-1);
            }
        }
        for(int i = 0;i<n;i++){
            if(nums[i]!=i+1){
                res[0] = nums[i];
                res[1] = i+1;
            }

        }
        return res;
    }
    void swap(vector<int>& nums,int a,int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
};