/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Codec {
public:

    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
        //层序遍历注意字符串处理
        if(root==nullptr)
            return "[]";
        queue<TreeNode*> q;
        string res = "[";
        q.push(root);
        while(!q.empty()){
            TreeNode* p = q.front();
            q.pop();
            if(p!=nullptr){
                res = res + to_string(p->val) + ",";
                q.push(p->left);
                q.push(p->right);
            }
            else
                res += "null,";
        }
        res = res.substr(0,res.size()-1);
        res += "]";
        return res;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        
    }
};

// Your Codec object will be instantiated and called as such:
// Codec codec;
// codec.deserialize(codec.serialize(root));