/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==nullptr)
            return l2;
        if(l2==nullptr)
            return l1;
        ListNode* phead = nullptr;
        ListNode* p1 = l1;
        ListNode* p2 = l2;//工作指针
        if(l1->val < l2->val){//确定合成后链表的头
            phead = l1;
            p1 = p1->next;
        }
        else{
            phead = l2;
            p2 = p2->next;
        }
        ListNode* p = phead;
        while(p1!=nullptr&&p2!=nullptr){
            if(p1->val < p2->val){
                p->next = p1;
                p = p1;
                p1 = p1->next;
            }
            else{
                p->next = p2;
                p = p2;
                p2 = p2->next;
            }
        }
        //处理l1和l2中未处理完的结点
        while(p1!=nullptr){
            p->next=p1;
            p = p1;
            p1 = p1->next;
        }
        while(p2!=nullptr){
            p->next=p2;
            p = p2;
            p2 = p2->next;
        }
        p->next=nullptr;
        return phead;
    }
};