class Solution {
public:
    int longestMountain(vector<int>& A) {
        //枚举山顶
        int n = A.size();
        if(n < 3)
            return 0;
        //left[i]代表i处的元素能够向左扩展的元素个数
        vector<int> left(n,0);
        //若A[i]>A[i-1]说明可以向左扩展否则不能置为0
        for(int i = 1;i<n;i++)
            left[i] = A[i]>A[i-1] ? left[i-1]+1:0;
        //同理得到向右扩展的情况
        vector<int> right(n,0);
        for(int i = n-2;i>=0;i--)
            right[i] = A[i]>A[i+1] ? right[i+1]+1:0;
        int res = 0;
        for(int i = 0;i<n;i++){
            //只有当left[i]和right[i]都大于0时i位置的元素才能为山顶
            if(left[i]>0 && right[i]>0)
                res = max(res,left[i]+right[i]+1);
        }
        return res;
    }
};