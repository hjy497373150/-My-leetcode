/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==nullptr)
            return nullptr;
        unordered_map<Node*,Node*> res;
        Node* cur = head;
        while(cur!=nullptr){
            Node* copy = new Node(cur->val);
            res[cur] = copy;
            cur = cur->next;
        }
        cur = head;
        while(cur!=nullptr){
            res[cur]->next = res[cur->next];
            res[cur]->random = res[cur->random];
            cur = cur->next;
        }
        return res[head];
    }
};