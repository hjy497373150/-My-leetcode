class Solution {
public:
    bool isNumber(string s) {
        //去头尾空格
        int i = s.find_first_not_of(' ');
        if(i==string::npos)
            return false;
        int j = s.find_last_not_of(' ');
        s = s.substr(i,j-i+1);
        //e划分底数与指数
        int e = s.find('e');
        //无指数直接判断底数是否合法
        if(e==string::npos)
            return judge1(s);
        else
            return judge1(s.substr(0,e)) && judge2(s.substr(e+1));
    }
    //判断底数是否合法
    bool judge1(string s){
        bool res = false;
        bool flag = false;
        for(int i = 0;i<s.size();i++){
            //先判断第一个字符是否是正负号
            if(s[i]=='+' || s[i]=='-'){
                if(i!=0)
                    return false;
            }
            else if(s[i]=='.'){
                if(flag)
                    return false;//多个小数点有问题
                flag = true;
            }
            //不是数字就有问题
            else if(s[i]<'0' || s[i]>'9')
                return false;
            else
                res = true;
        }
        return res;
    }
    //判断指数是否合法
    //区别在于不能有小数点
    bool judge2(string s){
        bool res = false;
        for(int i = 0;i<s.size();i++){
            if(s[i]=='+' || s[i]=='-'){
                if(i!=0)
                    return false;
            }
            //不是数字就有问题
            else if(s[i]<'0' || s[i]>'9')
                return false;
            else
                res = true;
        }
        return res;
    }
};