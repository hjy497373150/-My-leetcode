class Solution {
public:
    int translateNum(int num) {
        if(num >= 0 && num <= 9)
            return 1;
        string temp = to_string(num);
        vector<int> dp(11);
        dp[0] = dp[1] = 1;
        //动态规划，每加一个字符进行判断是否有多的翻译方法
        for(int i = 1;i<temp.size();i++){
            if(temp[i-1]=='0' || temp.substr(i-1,2) > "25")
                dp[i+1] = dp[i];
            else
                dp[i+1] = dp[i] + dp[i-1];
        }
        return dp[temp.size()];
    }
};