class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        //最小堆排序
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>> q;
        int n = matrix.size();
        for(int i = 0;i<n;i++)
            q.push(make_pair(matrix[i][0],make_pair(i,0)));
        for(int i = 0;i < k-1;i++){
            pair<int,pair<int,int>> temp = q.top();
            q.pop();
            if(temp.second.second != n-1)
                q.push(make_pair(matrix[temp.second.first][temp.second.second+1],make_pair(temp.second.first,temp.second.second+1)));
        }
        return q.top().first;
    }
};