class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        int m = mat.size(), n = mat[0].size();
        vector<pair<int,int>> power;//存放军人数量以及对应行的下标
        for(int i = 0;i<m;i++){
            int count = 0;
            for(int j = 0;j<n;j++){
                if(mat[i][j]==0)
                    break;
                count++;
            }
            power.emplace_back(count,i);
        }
        sort(power.begin(),power.end(),cmp);//直接排序
        vector<int> res(k);
        for(int i = 0;i<k;i++)
            res[i] = power[i].second;
        return res;
    }
    static bool cmp(pair<int,int>& a,pair<int,int>& b){
        return (a.first!=b.first)?a.first<b.first:a.second<b.second;
    }
};