class Solution {
public:
    bool isNumber(string s) {
        int sign = 0;//标识是否出现过符号
        int point = 0;//标识是否出现过.
        int exp = 0;//标识是否出现过e
        int num = 0;//标识当前是否有合法整数
        int dec = 0;//标识当前是否有合法小数
        int n = s.size();
        for(int i = 0;i<n;i++){
            if(s[i]=='+' || s[i]=='-'){
                //只能出现一个符号位
                if(sign)
                    return false;
                //符号位只能出现在首位或者e之后
                else if(i==0 || s[i-1]=='E' || s[i-1]=='e')
                    sign = 1;
                else
                    return false;
            }
            else if(s[i]=='.'){
                //小数点只能出现一次且不能出现在e之后
                if(exp || point)
                    return false;
                point = 1;
            }
            else if(s[i]=='e' || s[i]=='E'){
                //e只能出现一次 且前面必须有合法的整数或者小数
                if(exp || (num==0 && dec==0))
                    return false;
                //否则说明是合法的e，后面可以出现新的小数或者整数
                else{
                    sign = 0;
                    num = 0;
                    dec = 0;
                    exp = 1;
                }
            }
            else if(s[i]>='0' && s[i]<='9'){
                //如果整数位为空或者进入指数状态，要填入整数位
                if (num == 0 || exp == 1) {
                    num = 1;
                }
                //否则就是小数位，小数位有效
                else if(point) {
                    dec = 1;
                }
            }
            else
                //其他字符直接返回
                return false;
        }
        return num || dec;
    }
};