class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.size()==0 || s.size()==1)
            return s.size();
        unordered_map<char,int> mp;
        int head = 0;
        int res = 0;
        for(int i = 0;i<s.size();i++){
            //map中出现重复字串
            //如果尾指针指向的元素重复，则将头指针直接移动到窗口中重复元素的右侧。
            if(mp.find(s[i])!=mp.end())
                head = max(mp[s[i]],head);
            mp[s[i]] = i+1;
            res = max(res,i-head+1);
        }
        return res;
    }
};