class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        if(nums.size()==0)
            return 1;
        //桶的思想排好序，利用不断交换的原理
        for(int i = 0;i<nums.size();i++){
            //当不在对应位置时才进行交换
            while(nums[i]!=i+1){
                if(nums[i]<=0 || nums[i]>nums.size()||nums[i]==nums[nums[i]-1])
                    break;//最后一个条件是为了防止连续两个相同的数造成死循环
                int temp = nums[i];
                nums[i] = nums[temp-1];
                nums[temp-1] = temp;
            }
        }
        //排好序后，第一个不符合条件的索引输出即可
        for(int i = 0;i<nums.size();i++){
            if(nums[i]!=i+1)
                return i+1;
        }
        //如果全在索引上，输出最大值加一
        return nums.size()+1;
    }
};