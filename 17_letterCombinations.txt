class Solution {
public:
    vector<string> letterCombinations(string digits) {
        vector<string> res;//输出向量
        int size = digits.size();
        map<char, string> m = { {'2',"abc" },{'3',"def"},{'4',"ghi"},{'5',"jkl"},{'6',"mno"},{'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"} };//映射map哈希表
        queue<string> que;//新建队列
        string s;//队头元素
        for(int i = 0;i<m[digits[0]].size();i++){
            string str;
            str.push_back(m[digits[0]][i]);
            que.push(str);
        }
        // que.push(m[digits[0]]);错误在于将“abc作为一个整体入队了”
        for(int i = 1;i<size;i++){
            int length = que.size();//当前数列长度
            while(length--){ //队列不为空
                for(int j = 0;j < m[digits[i]].size();j++){
                    s = que.front();//得到当前队头元素准备组合
                    s = s+m[digits[i]][j];//组合
                    que.push(s);//入队
                }
                que.pop();//队头出队
            }
        }
        while(!que.empty())//队列不空，准备输出
        {
            res.push_back(que.front());
            que.pop();
        }
        return res;
    }
};