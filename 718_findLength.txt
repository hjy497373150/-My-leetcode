class Solution {
public:
    int findLength(vector<int>& A, vector<int>& B) {
       //滑动窗口
        int m = A.size(),n = B.size();
        int res = 0;
        for(int i = 0;i<m;i++){
            int len = min(n,m-i);
            res = max(res,maxlength(A,B,i,0,len));
        }
        for(int i = 0;i<n;i++){
            int len = min(m,n-i);
            res = max(res,maxlength(A,B,0,i,len));
        }
        return res;
    }
    int maxlength(vector<int>& A, vector<int>& B,int addA,int addB,int len){
        int res = 0;
        int k = 0;
        for(int i = 0;i<len;i++){
            if(A[addA+i]==B[addB+i])
                k++;
            else
                k = 0;
            res = max(res,k);
        }
        return res;
    }
};

class Solution {
public:
    int findLength(vector<int>& A, vector<int>& B) {
       //动态规划
        int m = A.size(),n = B.size();
        vector<vector<int> > dp(m+1,vector<int>(n+1,0));
        int res = 0;
        for(int i = m-1;i>=0;i--){
            for(int j = n-1;j>=0;j--){
                dp[i][j] = A[i]==B[j] ? dp[i+1][j+1]+1 :0;
                res = max(res,dp[i][j]);
            }
        }
        return res;
    }
};
