class Solution {
public:
    void backtrace(int left,int right,int n,string& s,vector<string>& result){
        //left和right分别表示左右括弧的个数
        //回溯法
        if(left==n && right ==n){
            //左右括弧个数都为n则将s加入res
            result.push_back(s);
            return;
        }
        if(left < n){
            s = s + "(";
            backtrace(left + 1, right, n, s, result);
            s.pop_back();
        }
        if(right < left){
            s = s + ")";
            backtrace(left , right+1, n, s, result);
            s.pop_back();
        }
    }
    vector<string> generateParenthesis(int n) {
        vector<string> result;
        string s;
        backtrace(0,0,n,s,result);
        return result;
    }
};