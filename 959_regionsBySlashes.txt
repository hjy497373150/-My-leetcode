class Solution {
public:
    int regionsBySlashes(vector<string>& grid) {
        //转换成之前做过的岛屿个数题目
        //然后再用DFS深度优先搜索
        int n = grid.size();
        vector<vector<int>> vec(n*3,vector<int>(n*3,0));
        for(int i = 0;i<n;i++){
            for(int j = 0;j<n;j++){
                if(grid[i][j]=='/'){
                    vec[i*3][j*3+2] = vec[i*3+1][j*3+1] = vec[i*3+2][j*3] = 1;
                }
                else if(grid[i][j]=='\\'){
                    vec[i*3][j*3] = vec[i*3+1][j*3+1] = vec[i*3+2][j*3+2] = 1;
                }
            }
        }
        int res = 0;
        for(int i = 0;i<vec.size();i++){
            for(int j = 0;j<vec.size();j++){
                if(vec[i][j]==0){
                    dfs(vec,i,j);
                    res++;
                }    
            }
        }
        return res;
    }
    void dfs(vector<vector<int>>& vec,int i,int j){
        if(i>=0 && i<vec.size() &&j>=0 &&j<vec[0].size()&&vec[i][j]==0){
            vec[i][j] = 1;
            dfs(vec,i-1,j);
            dfs(vec,i+1,j);
            dfs(vec,i,j-1);
            dfs(vec,i,j+1);
        }
    }
};