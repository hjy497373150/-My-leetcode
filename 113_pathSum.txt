/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    vector<int> path;
    vector<vector<int>> res;
    
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        //深度优先搜索DFS
        dfs(root,sum);
        return res;
    }
    void dfs(TreeNode* root, int sum){
        if(root==nullptr)
            return;
        path.push_back(root->val);
        sum -= root->val;
        //如果到达叶子结点且sum等于0说明这是一条满足条件的路径
        if(root->left==nullptr && root->right==nullptr && sum==0){
            res.push_back(path);
        }
        dfs(root->left,sum);
        dfs(root->right,sum);
        path.pop_back();
    }
};