/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(head==nullptr || head->next==nullptr)
            return head;
        //定时双指针链表，将大于等于或者小于x的链表节点依次插入到新的链表中
        //然后连接链表即可
        ListNode* small_head = new ListNode(-1);//哑结点
        ListNode* small = small_head;
        ListNode* large_head = new ListNode(-1);
        ListNode* large = large_head;
        while(head!=nullptr){
            if(head->val < x){
                small->next = head;
                small = small->next;
            }
            else{
                large->next = head;
                large = large->next;
            }
            head = head->next;
        }
        large->next = nullptr;
        small->next = large_head->next;//将small的尾部与large的头部相连
        return small_head->next;
    }
};