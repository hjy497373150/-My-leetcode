class Solution {
public:
    string addBinary(string a, string b) {
        int size_a = a.size();
        int size_b = b.size();
        //使a,b位数对齐，不足的补0
        while(size_a > size_b){
            b = "0" + b;
            size_b++;
        }
        while(size_b > size_a){
            a = "0" + a;
            size_a++;
        }
        for(int i = a.size()-1;i>0;--i){
            a[i] = a[i] - '0' + b[i];
            //需要进位
            if(a[i]>='2'){
                a[i] = (a[i]-'0')%2 + '0';
                a[i-1] = a[i-1]+1;
            }
        }
        a[0] = a[0] - '0' + b[0];//处理最高位
        if(a[0]>='2'){
            a[0] = (a[0]-'0')%2 + '0';
            a = "1" + a;
        }
        return a;
    }
};